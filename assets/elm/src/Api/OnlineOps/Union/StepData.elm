-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module OnlineOps.Union.StepData exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode
import OnlineOps.InputObject
import OnlineOps.Interface
import OnlineOps.Object
import OnlineOps.Scalar
import OnlineOps.ScalarCodecs
import OnlineOps.Union


type alias Fragments decodesTo =
    { onConnectAccount : SelectionSet decodesTo OnlineOps.Object.ConnectAccount
    , onConnectProperty : SelectionSet decodesTo OnlineOps.Object.ConnectProperty
    , onConnectView : SelectionSet decodesTo OnlineOps.Object.ConnectView
    }


{-| Build up a selection for this Union by passing in a Fragments record.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo OnlineOps.Union.StepData
fragments selections =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "ConnectAccount" selections.onConnectAccount
        , Object.buildFragment "ConnectProperty" selections.onConnectProperty
        , Object.buildFragment "ConnectView" selections.onConnectView
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onConnectAccount = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onConnectProperty = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onConnectView = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
