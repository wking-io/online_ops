-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module OnlineOps.Scalar exposing (Codecs, Id(..), Timestamp(..), defaultCodecs, defineCodecs, unwrapCodecs, unwrapEncoder)

import Graphql.Codec exposing (Codec)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode
import Json.Decode as Decode exposing (Decoder)
import Json.Encode as Encode


type Id
    = Id String


type Timestamp
    = Timestamp String


defineCodecs :
    { codecId : Codec valueId
    , codecTimestamp : Codec valueTimestamp
    }
    -> Codecs valueId valueTimestamp
defineCodecs definitions =
    Codecs definitions


unwrapCodecs :
    Codecs valueId valueTimestamp
    ->
        { codecId : Codec valueId
        , codecTimestamp : Codec valueTimestamp
        }
unwrapCodecs (Codecs unwrappedCodecs) =
    unwrappedCodecs


unwrapEncoder getter (Codecs unwrappedCodecs) =
    (unwrappedCodecs |> getter |> .encoder) >> Graphql.Internal.Encode.fromJson


type Codecs valueId valueTimestamp
    = Codecs (RawCodecs valueId valueTimestamp)


type alias RawCodecs valueId valueTimestamp =
    { codecId : Codec valueId
    , codecTimestamp : Codec valueTimestamp
    }


defaultCodecs : RawCodecs Id Timestamp
defaultCodecs =
    { codecId =
        { encoder = \(Id raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Id
        }
    , codecTimestamp =
        { encoder = \(Timestamp raw) -> Encode.string raw
        , decoder = Object.scalarDecoder |> Decode.map Timestamp
        }
    }
