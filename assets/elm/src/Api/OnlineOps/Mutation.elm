-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module OnlineOps.Mutation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import OnlineOps.InputObject
import OnlineOps.Interface
import OnlineOps.Object
import OnlineOps.Scalar
import OnlineOps.ScalarCodecs
import OnlineOps.Union


type alias AuthorizeUserOptionalArguments =
    { input : OptionalArgument OnlineOps.InputObject.MagicTokenParams }


authorizeUser : (AuthorizeUserOptionalArguments -> AuthorizeUserOptionalArguments) -> SelectionSet decodesTo OnlineOps.Object.UserAuthPayload -> SelectionSet (Maybe decodesTo) RootMutation
authorizeUser fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { input = Absent }

        optionalArgs =
            [ Argument.optional "input" filledInOptionals.input OnlineOps.InputObject.encodeMagicTokenParams ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "authorizeUser" optionalArgs object_ (identity >> Decode.nullable)


type alias CompleteSetupStepOptionalArguments =
    { input : OptionalArgument OnlineOps.InputObject.SpaceSetupParams }


type alias CompleteSetupStepRequiredArguments =
    { id : OnlineOps.ScalarCodecs.Id }


completeSetupStep : (CompleteSetupStepOptionalArguments -> CompleteSetupStepOptionalArguments) -> CompleteSetupStepRequiredArguments -> SelectionSet decodesTo OnlineOps.Object.StepPayload -> SelectionSet (Maybe decodesTo) RootMutation
completeSetupStep fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { input = Absent }

        optionalArgs =
            [ Argument.optional "input" filledInOptionals.input OnlineOps.InputObject.encodeSpaceSetupParams ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "completeSetupStep" (optionalArgs ++ [ Argument.required "id" requiredArgs.id (OnlineOps.ScalarCodecs.codecs |> OnlineOps.Scalar.unwrapEncoder .codecId) ]) object_ (identity >> Decode.nullable)


type alias CreateSessionOptionalArguments =
    { input : OptionalArgument OnlineOps.InputObject.CreateSessionParams }


createSession : (CreateSessionOptionalArguments -> CreateSessionOptionalArguments) -> SelectionSet decodesTo OnlineOps.Object.UserPayload -> SelectionSet (Maybe decodesTo) RootMutation
createSession fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { input = Absent }

        optionalArgs =
            [ Argument.optional "input" filledInOptionals.input OnlineOps.InputObject.encodeCreateSessionParams ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "createSession" optionalArgs object_ (identity >> Decode.nullable)


createSpace : SelectionSet decodesTo OnlineOps.Object.SpacePayload -> SelectionSet (Maybe decodesTo) RootMutation
createSpace object_ =
    Object.selectionForCompositeField "createSpace" [] object_ (identity >> Decode.nullable)


type alias CreateUserOptionalArguments =
    { input : OptionalArgument OnlineOps.InputObject.CreateUserParams }


createUser : (CreateUserOptionalArguments -> CreateUserOptionalArguments) -> SelectionSet decodesTo OnlineOps.Object.UserPayload -> SelectionSet (Maybe decodesTo) RootMutation
createUser fillInOptionals object_ =
    let
        filledInOptionals =
            fillInOptionals { input = Absent }

        optionalArgs =
            [ Argument.optional "input" filledInOptionals.input OnlineOps.InputObject.encodeCreateUserParams ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "createUser" optionalArgs object_ (identity >> Decode.nullable)


refreshSession : SelectionSet decodesTo OnlineOps.Object.UserAuthPayload -> SelectionSet (Maybe decodesTo) RootMutation
refreshSession object_ =
    Object.selectionForCompositeField "refreshSession" [] object_ (identity >> Decode.nullable)
