-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module OnlineOps.Query exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import OnlineOps.InputObject
import OnlineOps.Interface
import OnlineOps.Object
import OnlineOps.Scalar
import OnlineOps.ScalarCodecs
import OnlineOps.Union


type alias SpaceRequiredArguments =
    { id : OnlineOps.ScalarCodecs.Id }


space : SpaceRequiredArguments -> SelectionSet decodesTo OnlineOps.Object.SpacePayload -> SelectionSet (Maybe decodesTo) RootQuery
space requiredArgs object_ =
    Object.selectionForCompositeField "space" [ Argument.required "id" requiredArgs.id (OnlineOps.ScalarCodecs.codecs |> OnlineOps.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)


spaces : SelectionSet decodesTo OnlineOps.Object.SpacePayload -> SelectionSet (Maybe (List (Maybe decodesTo))) RootQuery
spaces object_ =
    Object.selectionForCompositeField "spaces" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


viewer : SelectionSet decodesTo OnlineOps.Object.UserPayload -> SelectionSet (Maybe decodesTo) RootQuery
viewer object_ =
    Object.selectionForCompositeField "viewer" [] object_ (identity >> Decode.nullable)
